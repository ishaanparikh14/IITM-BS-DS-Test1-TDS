name: Cache Demo Workflow

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  cache-demo:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: prime-cache-4b02f81
      id: prime-cache-4b02f81
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache
          node_modules
          .next/cache
          venv/
          __pycache__/
          .pytest_cache/
        key: cache-4b02f81-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/requirements.txt') }}
        restore-keys: |
          cache-4b02f81-${{ runner.os }}-
          
    - name: Cache status
      run: |
        echo "Cache hit: ${{ steps.prime-cache-4b02f81.outputs.cache-hit }}"
        if [ "${{ steps.prime-cache-4b02f81.outputs.cache-hit }}" = "true" ]; then
          echo "âœ… Cache restored successfully!"
        else
          echo "ðŸ”„ Cache miss - priming the cache"
          # Create some dummy files to simulate dependencies
          mkdir -p node_modules
          echo "simulated dependencies" > node_modules/deps.txt
          mkdir -p venv
          echo "python virtual env" > venv/env.txt
        fi
